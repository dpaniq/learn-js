'use strict'

/*
======================================= Regular Expression | Регулярные выражения
Регулярные выражения

	\ 					превращает специальный символ в обычный и наоборот
	. 					любой символ, кроме перевода строки
	* 					повторение предыдущего символа 0 и более раз
	+ 					повторение предыдущего символа 1 и более раз
	? 					повторение предыдушего символа 0 или 1 раз
	\d 					любая цифра
	\w 					любой словесный символ (буквы, цифры и _)
	[XYZ] 				любой символ из указанных 
	[XYZ]+ 				один или более символов из указанных
	^ 					начало выражения
	$ 					конец выражения
	[^a-z] 				не строчкая буква (веутри класса ^ означает НЕ)
	() 					запоминающие скобки ---> то что нужно выбрать ( выборка подстроки )
	| 					или
	{2} 				конкретное количество повторений
	{m, n} 				от m до n повторений предыдушего символа - {2, 3}
	\s 					символ пробела 
	\b 					разделитель между словами

Примеры:
	/x[eaoy]n/ - xen, xan, xon, xyn | но не - xfn, ada, xek ...
	/[^b]log/ - flog. dlog, plog | но не blog ...
	/[A-Z]/ - A, B, C, D... | но не a, b, c, d ...

Электронного ящик:
	/^([a-z0-9_\.-]+@([a-z0-9_\.-]+)\.([a-z\.]{2, 6})$/ // 12someone@inbox.lv


Как использовать в Js?
	В JavaSciprt:

	new RegExp("\\w+c", "igm"); // 1 параметр - шаблон, 2 параметр - флаги:
					//		i - не различать строчные и прописные
					//		g - глобальный поиск
					//		m - многострочный поиск

	Простой способ сделать регулярное выражение:
	let a = /\w+c/igm

	Методы регулярных выражений:
	RegExp.test - Есть ли совпадение в строке - возвращает true / false
		a.test('asdqwdasdac') // true
	RegExp.exec - Поиск совпадений в строке - возарвщает массив

	"sadsad123123123123123iuqnwdqnwdwq".search(/\d{2,8}/)

	String.search - Поиск совпадений в строке - Индекс совпадения / -1
	String.match - Поиск совпадений в строке - Массив / null
	String.replace - Поиск совпадений и замена - строка
	"bogdan gromov".replace(/(\w+)\s(\w+)/, "$2, $1 is good!")
	"bogdan gromov".replace(/(\w+)\s(\w+)/, function) - вызов функции
	String.split - Разбиение строки на массив подстрок - возвращает массив